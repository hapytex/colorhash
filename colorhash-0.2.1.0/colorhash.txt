-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Generate a color for a hashable object.
--   
--   Generate a color for a hashable object.
@package colorhash
@version 0.2.1.0


-- | Hashes are an easy way to distinguish between two objects since it is
--   not impossible that two random objects have the same hash, but it is
--   very unlikely. But for humans, a hash is often still not very
--   convenient. Colors are an easier way to distinguish. For example one
--   can make a list of items, and give each of the items a different color
--   based on the hash.
--   
--   This module provides a function <a>rgbHash</a> that can convert any
--   <a>Hashable</a> object to a <a>Colour</a>.
module Data.Hashable.Color

-- | Convert a given <a>Hashable</a> object to a <a>Colour</a> by
--   determining the hash, and using the last 24 bits as source for the
--   red, green, and blue channels of the <a>Colour</a> to construct.
rgbHash :: (Hashable a, Floating b, Ord b) => a -> Colour b

-- | Show the given <a>Hashable</a> object with ANSI terminal codes such
--   that the background is colorized by the hash of that object. This will
--   only work if the terminal supports <a>24-bit colors</a>. The
--   foreground is either black or white depending on whether the color is
--   more light or dark.
rgbHashBgShow :: (Hashable a, Show a) => a -> String

-- | Show the given <a>Hashable</a> object with ANSI terminal codes such
--   that the foreground is colorized by the hash of that object. This will
--   only work if the terminal supports <a>24-bit colors</a>. The
--   background is either black or white depending on whether the color is
--   more light or dark.
rgbHashFgShow :: (Hashable a, Show a) => a -> String
